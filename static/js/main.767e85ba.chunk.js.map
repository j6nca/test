{"version":3,"sources":["components/Nav.js","components/Style.js","components/Theme.js","components/Light.js","components/Landing.js","components/About.js","components/Work.js","components/Contact.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Nav","class","href","Style","createGlobalStyle","theme","body","text","lightTheme","darkTheme","IOSSwitch","withStyles","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","Landing","useState","setTheme","id","steps","loop","Infinity","wrapper","size","onChange","About","Work","className","Contact","Content","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gPAaeA,MAXf,WACI,OACI,wBAAIC,MAAM,UACN,wBAAIA,MAAM,YAAW,uBAAGC,KAAK,YAAR,SACrB,wBAAID,MAAM,YAAW,uBAAGC,KAAK,UAAR,UACrB,wBAAID,MAAM,YAAW,uBAAGC,KAAK,aAAR,aACrB,wBAAID,MAAM,YAAW,uBAAGC,KAAK,SAAR,SACrB,wBAAID,MAAM,YAAW,uBAAGC,KAAK,YAAR,c,qhDCR1B,IAAMC,EAAQC,YAAH,KAEI,qBAAGC,MAAkBC,QAC1B,qBAAGD,MAAkBE,QAMrB,qBAAGF,MAAkBE,QCRzBC,EAAa,CACtBF,KAAM,UACNC,KAAM,WAGGE,EAAY,CACrBH,KAAM,UACNC,KAAM,W,uBCLGG,EAAYC,aAAW,SAACN,GAAD,MAAY,CAC5CO,KAAM,CACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,OAAQX,EAAMY,QAAQ,IAExBC,WAAY,CACVH,QAAS,EACT,YAAa,CACXI,UAAW,mBACXC,MAAOf,EAAMgB,QAAQC,OAAOC,MAC5B,aAAc,CACZC,gBAAiB,UACjBC,QAAS,EACTC,OAAQ,SAGZ,wBAAyB,CACvBN,MAAO,UACPM,OAAQ,mBAGZC,MAAO,CACLd,MAAO,GACPC,OAAQ,IAEVc,MAAO,CACLC,aAAc,GACdL,gBAAiBnB,EAAMgB,QAAQS,KAAK,IACpCL,QAAS,EACTM,WAAY1B,EAAM2B,YAAYC,OAAO,CAAC,mBAAoB,YAE5DC,QAAS,GACTC,aAAc,MAlCOxB,EAmCnB,YAA4B,IAAzByB,EAAwB,EAAxBA,QAAYC,EAAY,2BAC7B,OACE,kBAACC,EAAA,EAAD,eACEC,sBAAuBH,EAAQD,aAC/BK,eAAa,EACbJ,QAAS,CACPxB,KAAMwB,EAAQxB,KACdM,WAAYkB,EAAQlB,WACpBS,MAAOS,EAAQT,MACfC,MAAOQ,EAAQR,MACfM,QAASE,EAAQF,UAEfG,OCfGI,MA5Bf,WAAmB,IAAD,EACYC,mBAAS,QADrB,mBACPrC,EADO,KACAsC,EADA,KAKd,OACI,kBAAC,IAAD,CAAetC,MAAiB,UAAVA,EAAoBG,EAAaC,GACzD,oCACA,kBAACN,EAAD,MAEE,yBAAKyC,GAAG,WACJ,2CACA,kBAAC,IAAD,CACJC,MAAO,CAAC,8BAAqB,KAAM,+BAAsB,MACzDC,KAAMC,IACNC,QAAQ,SAEV,6BACE,8DACA,6BACA,6BACA,kBAACtC,EAAD,CAAYU,MAAM,UAAU6B,KAAK,QAAQC,SAnBxB,WACCP,EAAV,UAAVtC,EAA6B,OAAmB,gBCCvC8C,MAXf,WACI,OACI,yBAAKP,GAAG,SACJ,qCACA,gMAAgK,6BAAK,6BAArK,oFACiF,6BAAK,6BADtF,qFAEkF,uBAAG1C,KAAK,YAAR,oBCU/EkD,MAhBf,WACI,OACI,yBAAKR,GAAG,QACJ,oCACA,uBAAG1C,KAAK,yFACJ,yBAAKmD,UAAU,WACX,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,iBACf,4ECILC,MAZf,WACI,OACI,yBAAKV,GAAG,WACJ,uCACA,wBAAIA,GAAG,WACH,4BAAI,uBAAG1C,KAAK,kCAAR,aACJ,4BAAI,uBAAGA,KAAK,4BAAR,UACJ,4BAAI,uBAAGA,KAAK,iEAAR,eCULqD,MAVf,WACI,OACI,yBAAKX,GAAG,WACJ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCOGY,MAdf,WAGE,OAEE,yBAAKH,UAAU,OACb,4BAAQA,UAAU,eAClB,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.767e85ba.chunk.js","sourcesContent":["import React,{useRef} from 'react';\n\nfunction Nav(){\n    return(\n        <ul class='navbar'>\n            <li class='nav-item'><a href='#landing'>home</a></li>\n            <li class='nav-item'><a href='#about'>about</a></li>\n            <li class='nav-item'><a href='#projects'>projects</a></li>\n            <li class='nav-item'><a href='#work'>work</a></li>\n            <li class='nav-item'><a href='#contact'>contact</a></li>\n        </ul>\n    );\n}\nexport default Nav;","import {createGlobalStyle} from 'styled-components';\nexport const Style = createGlobalStyle`\n    body{\n        background: ${({ theme }) => theme.body};\n        color: ${({ theme }) => theme.text};\n        font-family: Roboto, sans-serif;\n        transition: all 0.25s linear;\n    }\n    a{\n        text-decoration: none;\n        color: ${({ theme }) => theme.text};\n        opacity: 0.5;\n    }\n    a:hover{\n        opacity: 1.0;\n    }\n    html{\n        scroll-behavior: smooth;\n\n    }\n    li{\n        list-style: none;\n        font-size: 3vh;\n    }\n    .navbar{\n        position: fixed;\n      \n        height: 100vh;\n        left: 0;\n        width: 25%;\n    }\n    #lightswitch{\n        \n    }\n    #content{\n        position: relative;\n        left:25%;\n        width:50%;\n      }\n      #landing h1{\n        font-size: 15vh;\n      }\n      h1{\n        font-size: 7vh;\n      }\n      p{\n        font-size: 3vh;\n      }\n      #landing span{\n        font-size: 5vh;\n      }\n      #landing, #about, #work{\n        height: 100vh;\n      }\n      #contact ul {\n        padding-left:0;\n      }\n      #contact ul li{\n        display: inline;\n        padding-right: 50px;\n      }\n      .Component-root-1{\n        margin: 0 !important;\n      }\n      .project{\n          height: 250px;\n          \n      }\n      .project-thumb{\n          width: 48%;\n          height: 100%;\n          float: left;\n          background-color:red;\n      }\n      .project-title{\n        width: 48%;\n        height: 100%;\n        float: right;\n        margin-left:10px;\n    }\n      `;\n","import React from 'react';\n\nexport const lightTheme = {\n    body: '#fcfcfc',\n    text: '#1e1e1e',\n\n}\nexport const darkTheme = {\n    body: '#1e1e1e',\n    text: '#fcfcfc',\n\n}\n","import React from 'react';\nimport {Switch} from \"@material-ui/core\";\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const IOSSwitch = withStyles((theme) => ({\n    root: {\n      width: 84,\n      height: 52,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(32px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 48,\n      height: 48,\n    },\n    track: {\n      borderRadius: 52 / 2,\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  } );\n","import React,{useState} from 'react';\nimport Typical from 'react-typical'\n\nimport {ThemeProvider} from \"styled-components\";\nimport { Style } from \"./Style\";\nimport { lightTheme, darkTheme } from \"./Theme\"\nimport {IOSSwitch} from \"./Light\"\n\nfunction Landing(){\n    const [theme, setTheme] = useState('dark');\n    const themeToggler = () => {\n      theme === 'light' ? setTheme('dark') : setTheme('light')\n    }\n    return(\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <Style/>\n\n        <div id='landing'>\n            <h1>jonathan ng</h1>\n            <Typical\n        steps={[\"üë§ i'm a designer\", 1500, \"üë§ i'm a developer\", 1500]}\n        loop={Infinity}\n        wrapper=\"span\"\n      />\n      <br/>\n        <span>based in üìçtoronto</span>\n        <br/>\n        <br/>\n        <IOSSwitch  color='primary' size=\"large\" onChange={themeToggler} />\n\n        </div>\n        </>\n    </ThemeProvider>\n    );\n}\nexport default Landing;","import React from 'react';\nfunction About(){\n    return(\n        <div id='about'>\n            <h1>about</h1>\n            <p>hi! i‚Äôm jonathan, a developer trying to transition into design. i have experience working in the banking, transportation, video and data privacy industries. <br/><br/>\n            my hobbies include fishing, grilling, film, videography, and curating playlists. <br/><br/>\n            i am currently studying systems design engineering at the university of waterloo. <a href='#contact'>chat with me!</a>\n            </p>\n        </div>\n    );\n}\nexport default About;","import React from 'react';\nfunction Work(){\n    return(\n        <div id='work'>\n            <h1>work</h1>\n            <a href='https://www.notion.so/Redesign-Paprika-Mobile-Pantry-98003958d68f4c6c87dd69373c393b87'>\n                <div className='project'>\n                    <div className='project-thumb'></div>\n                    <div className='project-title'>\n                    <h2>redesigning paprika's mobile app pantry</h2>\n                    </div>\n                    \n                </div>\n            </a>\n        </div>\n    );\n}\nexport default Work;","import React from 'react';\nfunction Contact(){\n    return(\n        <div id='contact'>\n            <h1>contact</h1>\n            <ul id='socials'>\n                <li><a href=\"https://linkedin.com/in/ngkjon\">linkedin</a></li>\n                <li><a href=\"mailto:jng.cad@gmail.com\">email</a></li>\n                <li><a href=\"https://open.spotify.com/user/ddojo?si=C8jSAq0IQp6kR1ShZlPYJw\">spotify</a></li>\n            </ul>\n        </div>\n    );\n}\nexport default Contact;","import React from 'react';\nimport Landing from './Landing'\nimport About from './About'\nimport Work from './Work'\nimport Contact from './Contact'\n\n\n\nfunction Content(){\n    return(\n        <div id='content'>\n            <Landing/>\n            <About/>\n            <Work/>\n            <Contact/>\n        </div>\n    );\n}\nexport default Content;","import React,{useState} from 'react';\nimport './App.css';\n\nimport Nav from './components/Nav';\nimport Content from './components/Content';\n\n\nfunction App() {\n  \n\n  return (\n      \n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <Nav></Nav>\n      <Content></Content>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}